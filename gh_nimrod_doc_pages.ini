# Configuration template for https://github.com/gradha/gh_nimrod_doc_pages.
#
# The gh_nimrod_doc_pages.ini file configures the multiple options
# which you would otherwise have to repeatedly type on the command
# line. All the options have to be provided inside a section (specified
# with brackets) with the same name as the tag/branch you want them
# to apply to. Since you are meant to run gh_nimrod_doc_pages from
# the gh-pages branch, use section [gh-pages] to set up the global
# options.
#
# Global options are used by default when options for a specific
# tag/branch are not found. You can use specific sections to override
# one or more parameters, though not all parameters are available out
# of the global section. If you specify paths in global options,
# the program will skip them if later some of them are not found when
# checking out a tag/branch, since maybe different versions have
# different files. However, specific tags/branches paths will halt
# generation if they are not found.
#
# The syntax for this .ini file is described at
# http://nimrod-lang.org/parsecfg.html (or your local Nimrod parsecfg
# module documentation). Since git tags/branches tend to have dashes,
# please quote the strings inside brackets of each section to avoid
# parsing problems.

["gh-pages"]

# The update_html parameter is only for gh-pages, it specifies the
# file that will be updated with the list of generated documentation.
# This parameter can't be empty.
update_html=index.html

# The doc_dir parameter is only for gh-pages, it specifies the path
# to the directory where generated documents will be placed. This
# parameter can't be empty.
doc_dir=docs

# The ignore_tags parameter is only for gh-pages, it specifies the
# names of the tags that won't be processed. By default all available
# tags are processed. Use a triple quote multiline comment to specify
# one tag per line. You can use empty lines to separate tags visually.
#
# Since tags usually represent static snapshots of a git tree, if
# a tag has already been generated gh_nimrod_doc_pages will ignore
# it during a following run.
;ignore_tags="""
;this_tag_was_bad
;this_one_failed!
;oh_dont_get_this_one_either
;"""

# The branches parameter is only for gh-pages, it specifies the
# names of the branches that will be processed. By default no branches
# are processed.
#
# Branches specified here will be deleted and regenerated every
# time you run the program.
branches="""
master
"""
;branches="""
;master
;stable
;hotfixes
;"""

# The doc2_modules parameter can be used everywhere, it specifies
# the list of .nim files that will be processed with nimrod's doc2
# command to generate the HTML output. If you don't specify anything,
# all .nim files except nakefile.nim will be parsed. If you don't
# want to generate any files with the doc2 command, you can put a non
# existing .nim path in the global parameter so it will be skipped.
;doc2_modules="""
;foo2.nim
;bar2.nim
;"""

# The doc_modules works in a similar way to doc2_modules but uses
# nimrod's doc command instead of doc2. Also, since doc2 renders
# everything by default, this parameter has to be explicit, by default
# it won't render anything.
;doc_modules="""
;foo.nim
;bar.nim
;"""

# The rst_files parameter can be used everywhere, it specifies the
# paths to the files you want rendered as rst files. If you don't
# specify anything, all .rst files will be rendered. If you don't
# want to generate any rst files, you can put a non existing .rst
# path in the global parameter so it will be skipped.
;rst_files="""
;readme.txt
;license.rst
;fake_markdown.rst
;"""

# The md_files parameter can be used everywhere, it specifies the
# paths to the files you want rendered as markdown files. If you don't
# specify anything, all .md files will be rendered. If you don't want
# to generate any md files, you can put a non existing .md path in
# the global parameter so it will be skipped.
;md_files="""
;readme.md
;license.md
;fake_rst.md
;"""

# The link_html parameter can be used everywhere, it specifies the
# paths to the files you want to be linked from the HTML index. This
# can be useful if you have a complex library with several modules
# and you only want one of the files to be indexed, either because
# its imports lead to the others, or because you consider that to be
# the public API. Same with generated rst files.
#
# If this parameter is empty all generated HTML files will be linked.
;link_html="""
;bar2.html
;readme.html
;license.html
;"""

# The multipleIndices command can be used everywhere. By default
# gh_nimrod_doc_pages will collapse .idx files from all subdirectories
# to whatever common ancestor they have before running Nimrod's
# buildIndex command. The result is that if you have multiple
# subdirectories with .nim files, all their .idx will be placed at
# the root of your project so that they can all be included in a
# single index.
#
# However, if your project actually contains multiple separate
# projects with separate indices this default behaviour is unlikely
# what you want. Specify the multipleIndices command and a separate
# theindex.html will be built for each directory containing .idx
# files.

; multipleIndices # This is a command, no assignment needed!

;["v0.9.4"]
# From here on you would have the previous options specified only
# for this tag to override the globals.

;doc2_modules="" # doc2 was problematic on this version, so use plain doc.
;doc_modules="""
;foo.nim
;foo2.nim
;bar.nim
;bar2.nim
;"""

;# The following will avoid building links for the *2.html files.
;link_html="""
;foo.html
;bar.html
;"""
